- pipeline: "Production Site: Test, Build and Deploy Sample React Frontend to AWS S3 and CloudFront"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  ref_type: "BRANCH"
  trigger_condition: "ALWAYS"
  actions:
    - action: "Pretest: Install Dependencies, Remove stale coverage  report and Run Lint tests"
      type: "BUILD"
      working_directory: "/buddy/react-boilerplate"
      docker_image_name: "library/node"
      docker_image_tag: "10"
      execute_commands:
        - "# install recommended npm version for the repo"
        - "npm run preinstall"
        - "# Install application dependencies"
        - "npm install"
        - "# Prepare application for testing"
        - "npm run pretest"
      setup_commands:
        - "npm install -g gulp grunt-cli"
      mount_filesystem_path: "/buddy/react-boilerplate"
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Unit Tests: Run Application Unit tests, Clean test environment"
      type: "BUILD"
      working_directory: "/buddy/react-boilerplate"
      docker_image_name: "library/node"
      docker_image_tag: "10"
      execute_commands:
        - "npm run test"
        - "npm run test:clean"
        - ""
      setup_commands:
        - "npm install -g gulp grunt-cli"
      mount_filesystem_path: "/buddy/react-boilerplate"
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Compile Assets: Minify and Compress for production deployment"
      type: "BUILD"
      working_directory: "/buddy/react-boilerplate"
      docker_image_name: "library/node"
      docker_image_tag: "10"
      execute_commands:
        - "# "
        - "npm run prebuild"
        - "npm run build"
      setup_commands:
        - "npm install -g gulp grunt-cli"
      mount_filesystem_path: "/buddy/react-boilerplate"
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Wait for approval - Production Deployment"
      type: "WAIT_FOR_APPLY"
      comment: "Do you want to deploy to the Production Site?"
      trigger_condition: "ALWAYS"
    - action: "Deploy to AWS S3: Upload files to AWS bucket S3/buddydemo.dominicmotuka.com"
      type: "AMAZON_S3"
      input_type: "BUILD_ARTIFACTS"
      local_path: "build/"
      bucket_name: "buddydemo.dominicmotuka.com"
      acl: "PRIVATE"
      integration_hash: "5e2b5bffaab2cb6d3c21ae3a"
    - action: "Update Cloudfront: Purge Cloufront Cache for S3 Bucket"
      type: "CLOUD_FRONT"
      input_type: "SCM_REPOSITORY"
      local_path: "/"
      distribution_id: "E3NKJLELSFT7U5"
      purge_all: true
      purge_by_change_set_limit: 10
      trigger_condition: "ALWAYS"
      timeout: 0
      integration_hash: "5e31833d422f5a298bedc5a1"
    - action: "Send notification to buddy-prod-pipeline channel"
      type: "SLACK"
      trigger_time: "ON_FAILURE"
      content: "[#$BUDDY_EXECUTION_ID] $BUDDY_PIPELINE_NAME execution by <$BUDDY_INVOKER_URL|$BUDDY_INVOKER_NAME>"
      channel: "CT9J1E9FA"
      channel_name: "buddy-prod-pipeline"
      attachments:
        - '{"fallback":"$BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID","color":"danger","fields":[{"title":"Failed execution","value":"<$BUDDY_EXECUTION_URL|Execution #$BUDDY_EXECUTION_ID $BUDDY_EXECUTION_COMMENT>","short":true},{"title":"Pipeline","value":"<$BUDDY_PIPELINE_URL|$BUDDY_PIPELINE_NAME>","short":true},{"title":"Branch","value":"$BUDDY_EXECUTION_BRANCH","short":true},{"title":"Project","value":"<$BUDDY_PROJECT_URL|$BUDDY_PROJECT_NAME>","short":true}]}'
      trigger_condition: "ALWAYS"
      integration_hash: "5e31bdbfaab2cb2649d2636b"
    - action: "Send notification to buddy-prod-pipeline channel"
      type: "SLACK"
      trigger_time: "ON_BACK_TO_SUCCESS"
      content: "[#$BUDDY_EXECUTION_ID] $BUDDY_PIPELINE_NAME execution by <$BUDDY_INVOKER_URL|$BUDDY_INVOKER_NAME>"
      channel: "CT9J1E9FA"
      channel_name: "buddy-prod-pipeline"
      attachments:
        - '{"fallback":"$BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID","color":"good","fields":[{"title":"Successful execution","value":"<$BUDDY_EXECUTION_URL|Execution #$BUDDY_EXECUTION_ID $BUDDY_EXECUTION_COMMENT>","short":true},{"title":"Pipeline","value":"<$BUDDY_PIPELINE_URL|$BUDDY_PIPELINE_NAME>","short":true},{"title":"Branch","value":"$BUDDY_EXECUTION_BRANCH","short":true},{"title":"Project","value":"<$BUDDY_PROJECT_URL|$BUDDY_PROJECT_NAME>","short":true}]}'
      trigger_condition: "ALWAYS"
      integration_hash: "5e31bdbfaab2cb2649d2636b"
- pipeline: "Staging Site: Test, Build and Deploy Sample React Frontend to AWS S3 and CloudFront"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "develop"
  ref_type: "BRANCH"
  trigger_condition: "ALWAYS"
  actions:
    - action: "Pretest: Install Dependencies, Remove stale coverage  report and Run Lint tests"
      type: "BUILD"
      working_directory: "/buddy/react-boilerplate"
      docker_image_name: "library/node"
      docker_image_tag: "10"
      execute_commands:
        - "# install recommended npm version for the repo"
        - "npm run preinstall"
        - "# Install application dependencies"
        - "npm install"
        - "# Prepare application for testing"
        - "npm run pretest"
      setup_commands:
        - "npm install -g gulp grunt-cli"
      mount_filesystem_path: "/buddy/react-boilerplate"
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Unit Tests: Run Application Unit tests, Clean test environment"
      type: "BUILD"
      working_directory: "/buddy/react-boilerplate"
      docker_image_name: "library/node"
      docker_image_tag: "10"
      execute_commands:
        - "npm run test"
        - "npm run test:clean"
        - ""
      setup_commands:
        - "npm install -g gulp grunt-cli"
      mount_filesystem_path: "/buddy/react-boilerplate"
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Compile Assets: Minify and Compress for production deployment"
      type: "BUILD"
      working_directory: "/buddy/react-boilerplate"
      docker_image_name: "library/node"
      docker_image_tag: "10"
      execute_commands:
        - "# "
        - "npm run prebuild"
        - "npm run build"
      setup_commands:
        - "npm install -g gulp grunt-cli"
      mount_filesystem_path: "/buddy/react-boilerplate"
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Wait for approval - Staging Deployment"
      type: "WAIT_FOR_APPLY"
      comment: "Do you want to deploy to the Staging Site?"
      trigger_condition: "ALWAYS"
    - action: "Deploy to AWS S3: Upload files to AWS bucket S3/buddydemo.dominicmotuka.com"
      type: "AMAZON_S3"
      input_type: "BUILD_ARTIFACTS"
      local_path: "build/"
      bucket_name: "buddydemo-staging.dominicmotuka.com"
      acl: "PRIVATE"
      integration_hash: "5e2b5bffaab2cb6d3c21ae3a"
    - action: "Update Cloudfront: Purge Cloufront Cache for S3 Bucket"
      type: "CLOUD_FRONT"
      input_type: "SCM_REPOSITORY"
      distribution_id: "E21LMP0XQYN3WE"
      purge_all: true
      purge_by_change_set_limit: 10
      trigger_condition: "ALWAYS"
      timeout: 0
      integration_hash: "5e31833d422f5a298bedc5a1"
    - action: "Send notification to #buddy-staging-pipeline channel"
      type: "SLACK"
      trigger_time: "ON_FAILURE"
      content: "[#$BUDDY_EXECUTION_ID] $BUDDY_PIPELINE_NAME execution by <$BUDDY_INVOKER_URL|$BUDDY_INVOKER_NAME>"
      channel: "CT94RGV8C"
      channel_name: "buddy-staging-pipeline"
      attachments:
        - '{"fallback":"$BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID","color":"danger","fields":[{"title":"Failed execution","value":"<$BUDDY_EXECUTION_URL|Execution #$BUDDY_EXECUTION_ID $BUDDY_EXECUTION_COMMENT>","short":true},{"title":"Pipeline","value":"<$BUDDY_PIPELINE_URL|$BUDDY_PIPELINE_NAME>","short":true},{"title":"Branch","value":"$BUDDY_EXECUTION_BRANCH","short":true},{"title":"Project","value":"<$BUDDY_PROJECT_URL|$BUDDY_PROJECT_NAME>","short":true}]}'
      trigger_condition: "ALWAYS"
      integration_hash: "5e31bdbfaab2cb2649d2636b"
    - action: "Send notification to buddy-staging-pipeline channel"
      type: "SLACK"
      trigger_time: "ON_BACK_TO_SUCCESS"
      content: "[#$BUDDY_EXECUTION_ID] $BUDDY_PIPELINE_NAME execution by <$BUDDY_INVOKER_URL|$BUDDY_INVOKER_NAME>"
      channel: "CT94RGV8C"
      channel_name: "buddy-staging-pipeline"
      attachments:
        - '{"fallback":"$BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID","color":"good","fields":[{"title":"Successful execution","value":"<$BUDDY_EXECUTION_URL|Execution #$BUDDY_EXECUTION_ID $BUDDY_EXECUTION_COMMENT>","short":true},{"title":"Pipeline","value":"<$BUDDY_PIPELINE_URL|$BUDDY_PIPELINE_NAME>","short":true},{"title":"Branch","value":"$BUDDY_EXECUTION_BRANCH","short":true},{"title":"Project","value":"<$BUDDY_PROJECT_URL|$BUDDY_PROJECT_NAME>","short":true}]}'
      trigger_condition: "ALWAYS"
      integration_hash: "5e31bdbfaab2cb2649d2636b"
